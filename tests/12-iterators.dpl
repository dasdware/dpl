type RangeIterator := 
    [ finished: Boolean, current: Number, to: Number ];

function iterator(range: [from: Number, to: Number]): RangeIterator := 
    [ finished := range.from >= range.to, current := range.from, to := range.to ];

function next(iterator: RangeIterator): RangeIterator := {
        var current := iterator.current + 1;
        [ ..iterator, finished := current > iterator.to, current ]
    };

for (var i in [from := 0, to := 8])
   print("${i}\n");

for (var i in iterator([from := 0, to := 8]))
   print("${i}\n");

# The above loop produces exactly the same code as:
{
    var __it := iterator([from := 0, to := 8]);
    while (!(__it.finished)) {
        var i := __it.current;

        print("${i}\n");
        __it := __it.next();
    }
}
